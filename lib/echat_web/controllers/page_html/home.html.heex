<!DOCTYPE html>
<html>
<head>
  <title>Chat Application</title>
  <style>
    /* Add your CSS styling here */
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      height: 100vh;
      margin: 0;
    }
    .chat-container {
      display: flex;
      flex-direction: column;
      flex: 1;
      padding: 20px;
      max-height: 100%;
    }
    .messages {
      flex: 1;
      overflow-y: auto;
      border: 1px solid #ccc;
      padding: 10px;
    }
    .message {
      margin-bottom: 10px;
    }
    .message .username {
      font-weight: bold;
    }
    .message .content {
      margin-left: 10px;
    }
    .input-container {
      display: flex;
      justify-content: space-between;
      margin-top: 10px;
    }
    .input-container input {
      flex: 1;
      padding: 10px;
      box-sizing: border-box;
      margin-right: 10px;
    }
    .input-container textarea {
      flex: 10;
      padding: 10px;
      box-sizing: border-box;
    }
  </style>
  <script src="https://cdn.jsdelivr.net/npm/phoenix"></script>
</head>
<body>
  <div class="chat-container">
    <div class="messages" id="messageContainer">
      <!-- Messages will be displayed here -->
    </div>
    <div class="input-container">
      <input type="text" id="username" placeholder="Enter your username" />
      <textarea id="messageInput" class="message-input" placeholder="Type your message"></textarea>
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    const messageContainer = document.getElementById('messageContainer');
    const socket = new Phoenix.Socket("/socket", {});
    socket.connect();

    function random_user_id() {
      return Math.floor(Math.random() * 10000);
    }

    let user_id = random_user_id()
    const channel = socket.channel("rooms:lobby", {
      user_id: user_id
    });
    channel.join()
      .receive("ok", resp => {
        document.getElementById('username').value = "user" + user_id;
        document.getElementById('username').setAttribute('readonly', true);
        channel.push("new_user", "");
        return console.log("Joined successfully", resp)
      })
      .receive("error", resp => {
        console.log("Unable to join", resp);
      });

    channel.on("display_message", (message) => {
      displayMessage(message.username, message.content);
    });

    channel.on("user_entered", (message) => {
      displayMessage("user" + message.user_id, "user entered successfully.");
    });

    function sendMessage() {
      const usernameInput = document.getElementById('username');
      const messageInput = document.getElementById('messageInput');
      const username = usernameInput.value.trim();
      const message = messageInput.value.trim();

      if (message !== '') {
        const messageObject = {
          username: username,
          content: message
        };
        channel.push("new_message", messageObject);
        messageInput.value = '';
      }
    }

    function displayMessage(username, message) {
      const messageElement = document.createElement('div');
      messageElement.classList.add('message');

      const usernameElement = document.createElement('span');
      usernameElement.classList.add('username');
      usernameElement.innerText = username;

      const contentElement = document.createElement('span');
      contentElement.classList.add('content');
      contentElement.innerText = message;

      messageElement.appendChild(usernameElement);
      messageElement.appendChild(contentElement);

      messageContainer.appendChild(messageElement);
      messageContainer.scrollTop = messageContainer.scrollHeight;
    }

    document.getElementById('messageInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        sendMessage();
      }
    });
  </script>
</body>
</html>
